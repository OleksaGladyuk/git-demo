<?xml version="1.1" encoding="UTF-8"?><testrun duration="1444" footerText="Generated by IntelliJ IDEA on 27.08.22, 12:25" name="All in figures">
    <count name="total" value="1095"/>
    <count name="error" value="12"/>
    <count name="failed" value="12"/>
    <count name="passed" value="1071"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in figures">
        <module name="figures"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="TEST_OBJECT" value="package"/>
        <method v="2">
            <option name="Make" enabled="true"/>
        </method>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
        <output type="stdout">"C:\Program Files\Java\jdk-11.0.15.1\bin\java.exe" -ea -Didea.test.cyclic.buffer.size=1048576 "-javaagent:C:\Users\Andrew\Desktop\IntelliJ IDEA Community Edition 2022.1.3\lib\idea_rt.jar=1685:C:\Users\Andrew\Desktop\IntelliJ IDEA Community Edition 2022.1.3\bin" -Dfile.encoding=UTF-8 -classpath "C:\Users\Andrew\.m2\repository\org\junit\platform\junit-platform-launcher\1.6.2\junit-platform-launcher-1.6.2.jar;C:\Users\Andrew\Desktop\IntelliJ IDEA Community Edition 2022.1.3\lib\idea_rt.jar;C:\Users\Andrew\Desktop\IntelliJ IDEA Community Edition 2022.1.3\plugins\junit\lib\junit5-rt.jar;C:\Users\Andrew\Desktop\IntelliJ IDEA Community Edition 2022.1.3\plugins\junit\lib\junit-rt.jar;C:\Users\Andrew\IdeaProjects\figures\target\test-classes;C:\Users\Andrew\IdeaProjects\figures\target\classes;C:\Users\Andrew\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.6.2\junit-jupiter-engine-5.6.2.jar;C:\Users\Andrew\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\Andrew\.m2\repository\org\junit\platform\junit-platform-engine\1.6.2\junit-platform-engine-1.6.2.jar;C:\Users\Andrew\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.6.2\junit-jupiter-api-5.6.2.jar;C:\Users\Andrew\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Andrew\.m2\repository\org\junit\platform\junit-platform-commons\1.6.2\junit-platform-commons-1.6.2.jar;C:\Users\Andrew\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.6.2\junit-jupiter-params-5.6.2.jar" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 @w@C:\Users\Andrew\AppData\Local\Temp\idea_working_dirs_junit.tmp @C:\Users\Andrew\AppData\Local\Temp\idea_junit.tmp -socket1684
Process finished with exit code -1
</output>
    </root>
    <suite duration="1293" locationUrl="java:suite://com.epam.rd.autotasks.figures.QuadrilateralTest" name="QuadrilateralTest" status="passed">
        <suite duration="833" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="testLeftmost(Quadrilateral, double)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed">
            <test duration="186" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[1] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[2] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[3] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[4] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[5] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[6] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[7] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[8] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[9] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[10] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[11] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[12] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="7" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[13] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[14] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[15] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[16] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[17] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[18] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[19] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[20] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[21] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[22] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="15" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[23] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[24] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[25] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[26] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[27] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[28] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[29] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[30] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[31] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[32] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="10" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[33] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[34] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[35] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[36] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[37] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[38] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[39] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[40] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[41] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[42] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[43] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[44] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[45] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[46] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[47] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[48] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[49] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[50] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[51] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[52] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[53] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[54] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="14" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[55] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[56] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[57] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="8" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[58] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[59] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[60] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[61] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[62] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[63] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[64] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[65] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[66] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[67] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[68] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[69] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[70] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[71] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[72] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[73] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="26" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[74] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="7" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[75] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[76] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[77] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[78] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[79] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[80] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[81] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="7" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[82] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[83] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[84] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[85] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="13" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[86] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[87] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[88] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[89] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[90] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[91] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[92] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[93] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[94] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[95] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[96] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[97] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[98] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[99] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[100] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[101] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[102] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[103] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[104] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[105] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[106] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[107] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[108] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[109] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[110] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[111] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[112] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[113] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[114] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[115] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="7" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[116] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[117] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[118] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[119] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="14" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[120] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[121] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[122] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[123] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[124] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[125] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[126] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[127] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[128] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[129] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[130] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[131] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[132] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[133] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[134] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[135] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[136] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[137] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[138] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[139] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[140] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[141] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[142] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[143] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[144] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[145] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[146] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[147] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[148] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[149] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[150] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[151] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[152] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[153] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[154] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[155] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[156] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[157] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[158] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="7" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[159] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[160] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[161] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[162] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[163] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[164] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[165] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[166] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[167] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[168] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[169] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[170] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[171] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[172] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[173] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[174] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[175] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[176] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[177] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[178] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[179] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[180] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[181] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[182] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[183] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[184] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[185] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[186] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[187] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[188] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[189] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[190] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="10" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[191] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[192] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[193] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[194] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[195] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[196] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[197] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[198] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[199] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[200] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[201] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[202] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[203] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[204] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[205] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[206] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[207] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[208] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[209] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[210] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[211] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[212] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[213] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[214] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[215] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[216] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[217] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[218] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[219] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[220] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[221] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[222] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[223] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="7" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[224] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[225] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[226] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[227] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[228] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[229] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[230] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[231] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[232] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[233] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[234] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[235] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[236] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[237] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[238] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[239] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[240] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[241] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], -1.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[242] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[243] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[244] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[245] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[246] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], -2.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[247] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[248] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[249] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[250] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[251] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[252] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[253] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[254] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[255] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], -4.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testLeftmost" name="[256] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], -3.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
        </suite>
        <suite duration="246" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="testArea(Quadrilateral, double)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed">
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[1] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], 3.9999999999999982" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[2] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], 6.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[3] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], 7.999999999999995" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[4] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], 8.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[5] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], 5.999999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[6] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], 8.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[7] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], 12.000000000000002" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[8] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], 13.499999999999991" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[9] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], 8.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[10] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], 12.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[11] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], 15.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[12] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], 18.500000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[13] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], 9.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[14] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], 13.500000000000005" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[15] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], 18.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[16] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], 20.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[17] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 6.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[18] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 8.000000000000002" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[19] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 9.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[20] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 10.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[21] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 8.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[22] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 11.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[23] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 15.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[24] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 16.49999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[25] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 12.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[26] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 16.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[27] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 19.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[28] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 22.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[29] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 13.500000000000002" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[30] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 18.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[31] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 23.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[32] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 24.499999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[33] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 8.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[34] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 10.000000000000002" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[35] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 11.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[36] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 12.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[37] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 11.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[38] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 14.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[39] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 18.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[40] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 19.49999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[41] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 15.000000000000005" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[42] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 19.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[43] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 22.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[44] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 25.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[45] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 18.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[46] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 22.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[47] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 27.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[48] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 29.49999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[49] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], 9.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[50] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], 11.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[51] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], 12.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[52] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], 13.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[53] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], 13.500000000000002" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[54] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], 16.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[55] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], 19.500000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[56] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], 20.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[57] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], 18.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[58] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], 22.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[59] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], 25.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[60] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], 28.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[61] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], 20.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[62] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], 24.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[63] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], 29.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[64] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], 31.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[65] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], 5.999999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[66] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], 8.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[67] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], 11.999999999999991" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[68] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], 13.500000000000002" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[69] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], 8.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[70] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], 11.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[71] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], 15.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[72] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], 17.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[73] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], 9.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[74] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], 15.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[75] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], 19.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[76] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], 23.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[77] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], 11.000000000000005" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[78] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], 16.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[79] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], 22.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[80] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], 24.50000000000001" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[81] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 8.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[82] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 11.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[83] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 14.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[84] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 16.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[85] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 11.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[86] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 15.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[87] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 19.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[88] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 21.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[89] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 14.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[90] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 20.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[91] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 24.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[92] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 28.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[93] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 16.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[94] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 22.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[95] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 27.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[96] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 30.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[97] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 11.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[98] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 14.999999999999995" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[99] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 17.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[100] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 19.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[101] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 15.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[102] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 19.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[103] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 23.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[104] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 25.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[105] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 18.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[106] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 24.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[107] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 28.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[108] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 32.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[109] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 22.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[110] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 27.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[111] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 33.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[112] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 36.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[113] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], 13.499999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[114] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], 16.499999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[115] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], 19.49999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[116] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], 21.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[117] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], 17.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[118] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], 21.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[119] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], 25.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[120] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], 27.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[121] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], 22.999999999999982" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[122] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], 28.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[123] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], 31.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[124] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], 35.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[125] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], 24.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[126] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], 29.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="9" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[127] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], 35.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[128] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], 38.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[129] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], 8.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[130] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], 12.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[131] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], 15.000000000000005" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[132] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], 18.50000000000001" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[133] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], 10.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[134] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], 15.000000000000009" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[135] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], 19.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[136] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], 22.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[137] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], 11.999999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[138] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], 18.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[139] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], 21.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[140] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], 27.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[141] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], 12.99999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[142] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], 19.49999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[143] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], 25.49999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[144] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], 29.49999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[145] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 12.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[146] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 16.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[147] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 19.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[148] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 22.50000000000001" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[149] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 15.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[150] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 20.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[151] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 24.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[152] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 28.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[153] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 18.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[154] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 24.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[155] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 28.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[156] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 33.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[157] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 19.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[158] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 26.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[159] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 32.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[160] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 36.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[161] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 15.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[162] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 19.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[163] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 22.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[164] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 25.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[165] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 19.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[166] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 24.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[167] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 28.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[168] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 31.999999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[169] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 22.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[170] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 28.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[171] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 32.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[172] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 37.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[173] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 25.499999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[174] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 31.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[175] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 37.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[176] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 41.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[177] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], 18.500000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[178] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], 22.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[179] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], 25.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[180] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], 29.000000000000014" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[181] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], 23.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[182] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], 28.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[183] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], 32.00000000000001" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[184] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], 36.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[185] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], 27.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[186] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], 33.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[187] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], 37.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[188] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], 43.99999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[189] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], 29.49999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[190] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], 35.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[191] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], 41.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[192] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], 45.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[193] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], 9.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[194] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], 13.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[195] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], 18.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[196] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], 20.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[197] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], 11.000000000000005" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[198] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], 16.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[199] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], 22.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[200] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], 24.499999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[201] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], 12.99999999999998" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[202] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], 19.50000000000002" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[203] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], 25.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[204] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], 29.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[205] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], 14.000000000000012" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[206] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], 21.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[207] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], 28.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[208] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], 31.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[209] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 13.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[210] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 18.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[211] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 22.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[212] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 24.500000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[213] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 16.5" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[214] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 22.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[215] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 27.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[216] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 29.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[217] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 19.499999999999964" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[218] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 26.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[219] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 31.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[220] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 35.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[221] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 21.000000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[222] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 27.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[223] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 35.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[224] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 38.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[225] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], 18.500000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[226] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], 23.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[227] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], 27.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[228] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], 29.500000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[229] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], 22.500000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[230] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], 28.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[231] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], 33.99999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[232] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], 35.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[233] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], 25.49999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[234] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], 32.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[235] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], 37.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[236] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], 41.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[237] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], 28.999999999999993" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[238] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], 35.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[239] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], 43.99999999999997" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[240] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], 45.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[241] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], 20.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[242] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], 24.500000000000004" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[243] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], 29.49999999999999" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[244] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], 31.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[245] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], 24.50000000000001" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[246] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], 30.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[247] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], 36.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[248] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], 38.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[249] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], 29.49999999999996" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[250] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], 36.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[251] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], 41.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[252] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], 45.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[253] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], 31.000000000000007" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[254] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], 38.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[255] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], 45.999999999999986" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testArea" name="[256] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], 48.0" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, double" status="passed"/>
        </suite>
        <suite duration="88" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="testToString(Quadrilateral, String)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed">
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[1] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[2] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[3] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[4] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[5] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[6] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[7] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[8] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[9] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[10] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[11] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[12] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[13] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[14] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[15] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[16] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[17] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[18] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[19] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[20] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[21] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[22] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[23] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[24] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[25] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[26] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[27] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[28] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[29] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[30] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[31] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[32] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[33] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[34] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[35] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[36] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[37] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[38] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[39] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[40] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[41] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[42] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[43] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[44] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[45] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[46] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[47] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[48] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[49] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[50] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[51] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[52] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[53] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[54] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[55] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[56] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[57] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[58] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[59] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[60] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[61] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[62] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[63] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[64] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[65] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[66] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[67] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[68] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[69] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[70] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[71] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[72] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[73] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[74] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[75] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[76] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[77] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[78] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[79] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[80] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[81] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[82] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[83] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[84] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[85] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[86] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[87] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[88] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[89] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[90] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[91] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[92] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[93] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[94] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[95] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[96] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[97] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[98] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[99] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[100] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[101] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[102] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[103] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[104] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[105] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[106] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[107] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[108] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[109] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[110] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[111] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[112] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[113] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[114] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[115] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[116] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[117] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[118] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[119] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[120] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[121] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[122] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[123] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[124] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[125] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[126] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[127] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[128] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[129] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[130] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[131] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[132] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[133] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[134] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[135] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[136] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[137] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[138] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[139] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[140] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[141] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[142] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[143] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[144] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[145] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[146] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[147] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[148] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[149] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[150] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[151] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[152] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[153] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[154] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[155] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[156] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[157] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[158] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[159] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[160] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[161] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[162] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[163] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[164] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[165] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[166] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[167] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[168] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[169] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[170] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[171] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[172] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[173] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[174] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[175] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[176] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[177] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[178] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[179] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[180] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[181] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[182] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[183] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[184] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[185] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[186] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[187] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[188] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[189] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[190] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[191] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[192] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[193] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[194] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[195] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[196] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[197] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[198] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[199] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[200] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[201] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[202] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[203] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[204] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[205] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[206] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[207] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[208] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[209] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[210] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[211] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[212] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[213] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[214] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[215] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[216] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[217] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[218] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[219] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[220] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[221] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[222] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[223] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[224] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[225] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[226] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[227] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[228] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[229] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[230] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[231] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[232] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[233] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[234] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[235] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[236] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[237] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[238] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[239] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[240] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[241] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[242] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[243] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[244] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[245] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[246] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[247] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[248] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[249] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[250] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[251] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[252] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[253] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[254] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[255] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testToString" name="[256] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)]" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
        </suite>
        <suite duration="123" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="testPoints(Quadrilateral, String)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed">
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[1] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], (1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[2] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], (1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[3] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], (1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[4] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], (1.0,1.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[5] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], (1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[6] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], (1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[7] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], (1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[8] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], (1.0,1.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[9] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], (1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[10] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], (1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[11] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], (1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[12] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], (1.0,1.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[13] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], (1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[14] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], (1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[15] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], (1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[16] Quadrilateral[(1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], (1.0,1.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[17] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[18] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[19] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[20] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (1.0,1.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[21] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[22] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[23] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[24] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (1.0,1.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[25] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[26] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[27] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[28] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (1.0,1.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[29] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[30] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[31] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[32] Quadrilateral[(1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (1.0,1.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[33] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[34] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[35] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[36] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (1.0,1.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[37] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[38] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[39] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[40] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (1.0,1.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[41] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[42] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="6" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[43] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[44] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (1.0,1.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[45] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[46] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[47] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[48] Quadrilateral[(1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (1.0,1.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[49] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], (1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[50] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], (1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[51] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], (1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[52] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], (1.0,1.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[53] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], (1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[54] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], (1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[55] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], (1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[56] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], (1.0,1.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[57] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], (1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[58] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], (1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[59] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], (1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[60] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], (1.0,1.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[61] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], (1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[62] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], (1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[63] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], (1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[64] Quadrilateral[(1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], (1.0,1.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[65] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], (2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[66] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], (2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[67] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], (2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[68] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], (2.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[69] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], (2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[70] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], (2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[71] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], (2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[72] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], (2.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[73] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], (2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[74] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], (2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[75] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], (2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[76] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], (2.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[77] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], (2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[78] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], (2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[79] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], (2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[80] Quadrilateral[(2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], (2.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[81] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[82] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[83] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[84] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (2.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[85] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[86] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[87] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[88] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (2.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[89] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[90] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[91] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[92] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (2.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[93] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[94] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[95] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[96] Quadrilateral[(2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (2.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[97] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[98] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[99] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[100] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (2.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[101] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[102] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[103] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[104] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (2.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[105] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[106] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[107] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[108] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (2.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[109] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[110] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[111] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[112] Quadrilateral[(2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (2.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[113] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], (2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[114] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], (2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[115] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], (2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[116] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], (2.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[117] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], (2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[118] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], (2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[119] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], (2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[120] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], (2.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[121] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], (2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[122] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], (2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[123] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], (2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[124] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], (2.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[125] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], (2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[126] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], (2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[127] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], (2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[128] Quadrilateral[(2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], (2.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[129] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], (4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[130] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], (4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[131] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], (4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[132] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], (4.0,2.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[133] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], (4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[134] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], (4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[135] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], (4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[136] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], (4.0,2.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[137] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], (4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[138] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], (4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[139] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], (4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[140] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], (4.0,2.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[141] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], (4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[142] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], (4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[143] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], (4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[144] Quadrilateral[(4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], (4.0,2.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[145] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[146] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[147] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[148] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (4.0,2.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[149] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[150] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[151] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[152] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (4.0,2.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[153] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[154] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[155] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[156] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (4.0,2.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[157] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[158] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[159] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[160] Quadrilateral[(4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (4.0,2.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[161] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[162] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[163] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[164] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (4.0,2.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[165] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[166] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[167] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[168] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (4.0,2.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[169] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[170] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[171] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[172] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (4.0,2.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[173] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[174] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[175] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[176] Quadrilateral[(4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (4.0,2.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[177] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], (4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[178] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], (4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[179] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], (4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[180] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], (4.0,2.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[181] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], (4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[182] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], (4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[183] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], (4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[184] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], (4.0,2.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[185] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], (4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[186] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], (4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[187] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], (4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[188] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], (4.0,2.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[189] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], (4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[190] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], (4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[191] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], (4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[192] Quadrilateral[(4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], (4.0,2.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[193] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)], (3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[194] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)], (3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[195] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)], (3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[196] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)], (3.0,4.0)(1.0,-1.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[197] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)], (3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[198] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)], (3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[199] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)], (3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[200] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)], (3.0,4.0)(1.0,-1.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[201] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)], (3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[202] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)], (3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[203] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)], (3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[204] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)], (3.0,4.0)(1.0,-1.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[205] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)], (3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[206] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)], (3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[207] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)], (3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[208] Quadrilateral[(3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)], (3.0,4.0)(1.0,-1.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[209] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[210] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[211] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[212] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (3.0,4.0)(2.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[213] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[214] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[215] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[216] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (3.0,4.0)(2.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[217] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[218] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[219] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[220] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (3.0,4.0)(2.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[221] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[222] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[223] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[224] Quadrilateral[(3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (3.0,4.0)(2.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[225] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)], (3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[226] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)], (3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[227] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)], (3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[228] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)], (3.0,4.0)(4.0,-2.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[229] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)], (3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[230] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)], (3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[231] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)], (3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[232] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)], (3.0,4.0)(4.0,-2.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[233] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)], (3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[234] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)], (3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[235] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)], (3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[236] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)], (3.0,4.0)(4.0,-2.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[237] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)], (3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[238] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)], (3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[239] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)], (3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[240] Quadrilateral[(3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)], (3.0,4.0)(4.0,-2.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[241] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)], (3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[242] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)], (3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[243] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)], (3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[244] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)], (3.0,4.0)(3.0,-4.0)(-1.0,-1.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[245] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)], (3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[246] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)], (3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[247] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)], (3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[248] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)], (3.0,4.0)(3.0,-4.0)(-2.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[249] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)], (3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[250] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)], (3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[251] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)], (3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[252] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)], (3.0,4.0)(3.0,-4.0)(-4.0,-2.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[253] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)], (3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-1.0,1.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[254] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)], (3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-2.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[255] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)], (3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-4.0,2.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testPoints" name="[256] Quadrilateral[(3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)], (3.0,4.0)(3.0,-4.0)(-3.0,-4.0)(-3.0,4.0)" metainfo="com.epam.rd.autotasks.figures.Quadrilateral, java.lang.String" status="passed"/>
        </suite>
        <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.QuadrilateralTest/testConstructor" name="testConstructor()" metainfo="" status="passed"/>
    </suite>
    <suite duration="111" locationUrl="java:suite://com.epam.rd.autotasks.figures.TriangleTest" name="TriangleTest" status="error">
        <suite duration="19" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="testLeftmost(double, double, double, double, double, double, double)" metainfo="double, double, double, double, double, double, double" status="error">
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[1] 0, 0, 0, 4, 0, 0, 3" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[2] 0, 0, 1, 0, 4, 3, 0" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[3] -5, 2, 5, -5, 4, 3, 0" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[4] -2, 8, 2, 1, 2, -2, -8" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[5] 2, 4, 5, 2, 5, 3, -8" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[6] 6, 9, 7, 6, 9, 7, -8" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[7] 4, 4, 9, 4, 6, 9, -8" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[8] -3, 6, 3, 7, 3, -3, -7" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[9] 3, 3, 5, 9, 3, 6, 5" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[10] 3, 8, 2, 3, 7, 3, 3" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[11] 4, 7, 7, 4, 0, 5, 5" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testLeftmost" name="[12] 3, 3, 4, 8, 2, 6, 9" metainfo="double, double, double, double, double, double, double" status="error">
                <output type="stderr">java.lang.NullPointerException&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testLeftmost(TriangleTest.java:47)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
        </suite>
        <suite duration="63" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="testArea(double, double, double, double, double, double, double)" metainfo="double, double, double, double, double, double, double" status="passed">
            <test duration="55" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[1] 6.0, 0, 0, 4, 0, 0, 3" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[2] 4.5, 0, 1, 0, 4, 3, 0" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[3] 18.0, 2, 5, -5, 4, 3, 0" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[4] 35.0, 8, 2, 1, 2, -2, -8" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[5] 13.0, 4, 5, 2, 5, 3, -8" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[6] 24.5, 9, 7, 6, 9, 7, -8" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[7] 7.5, 4, 9, 4, 6, 9, -8" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[8] 5.0, 6, 3, 7, 3, -3, -7" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[9] 3.0, 3, 5, 9, 3, 6, 5" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[10] 10.0, 8, 2, 3, 7, 3, 3" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[11] 4.0, 7, 7, 4, 0, 5, 5" metainfo="double, double, double, double, double, double, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testArea" name="[12] 15.5, 3, 4, 8, 2, 6, 9" metainfo="double, double, double, double, double, double, double" status="passed"/>
        </suite>
        <suite duration="12" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="testToString(String, double, double, double, double, double, double)" metainfo="java.lang.String, double, double, double, double, double, double" status="passed">
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[1] Triangle[(0.0,0.0)(4.0,0.0)(0.0,3.0)], 0, 0, 4, 0, 0, 3" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[2] Triangle[(0.0,1.0)(0.0,4.0)(3.0,0.0)], 0, 1, 0, 4, 3, 0" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[3] Triangle[(2.0,5.0)(-5.0,4.0)(3.0,0.0)], 2, 5, -5, 4, 3, 0" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[4] Triangle[(8.0,2.0)(1.0,2.0)(-2.0,-8.0)], 8, 2, 1, 2, -2, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[5] Triangle[(4.0,5.0)(2.0,5.0)(3.0,-8.0)], 4, 5, 2, 5, 3, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[6] Triangle[(9.0,7.0)(6.0,9.0)(7.0,-8.0)], 9, 7, 6, 9, 7, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[7] Triangle[(4.0,9.0)(4.0,6.0)(9.0,-8.0)], 4, 9, 4, 6, 9, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[8] Triangle[(6.0,3.0)(7.0,3.0)(-3.0,-7.0)], 6, 3, 7, 3, -3, -7" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[9] Triangle[(3.0,5.0)(9.0,3.0)(6.0,5.0)], 3, 5, 9, 3, 6, 5" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[10] Triangle[(8.0,2.0)(3.0,7.0)(3.0,3.0)], 8, 2, 3, 7, 3, 3" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[11] Triangle[(7.0,7.0)(4.0,0.0)(5.0,5.0)], 7, 7, 4, 0, 5, 5" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testToString" name="[12] Triangle[(3.0,4.0)(8.0,2.0)(6.0,9.0)], 3, 4, 8, 2, 6, 9" metainfo="java.lang.String, double, double, double, double, double, double" status="passed"/>
        </suite>
        <suite duration="17" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="testPoints(String, double, double, double, double, double, double)" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
            <test duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[1] (0.0,0.0)(4.0,0.0)(0.0,3.0), 0, 0, 4, 0, 0, 3" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(0.0,0.0)(4.0,0.0)(0.0,3.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(0.0,0.0)(4.0,0.0)(0.0,3.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[2] (0.0,1.0)(0.0,4.0)(3.0,0.0), 0, 1, 0, 4, 3, 0" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(0.0,1.0)(0.0,4.0)(3.0,0.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(0.0,1.0)(0.0,4.0)(3.0,0.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[3] (2.0,5.0)(-5.0,4.0)(3.0,0.0), 2, 5, -5, 4, 3, 0" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(2.0,5.0)(-5.0,4.0)(3.0,0.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(2.0,5.0)(-5.0,4.0)(3.0,0.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[4] (8.0,2.0)(1.0,2.0)(-2.0,-8.0), 8, 2, 1, 2, -2, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(8.0,2.0)(1.0,2.0)(-2.0,-8.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(8.0,2.0)(1.0,2.0)(-2.0,-8.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[5] (4.0,5.0)(2.0,5.0)(3.0,-8.0), 4, 5, 2, 5, 3, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(4.0,5.0)(2.0,5.0)(3.0,-8.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(4.0,5.0)(2.0,5.0)(3.0,-8.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[6] (9.0,7.0)(6.0,9.0)(7.0,-8.0), 9, 7, 6, 9, 7, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(9.0,7.0)(6.0,9.0)(7.0,-8.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(9.0,7.0)(6.0,9.0)(7.0,-8.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[7] (4.0,9.0)(4.0,6.0)(9.0,-8.0), 4, 9, 4, 6, 9, -8" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(4.0,9.0)(4.0,6.0)(9.0,-8.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(4.0,9.0)(4.0,6.0)(9.0,-8.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[8] (6.0,3.0)(7.0,3.0)(-3.0,-7.0), 6, 3, 7, 3, -3, -7" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(6.0,3.0)(7.0,3.0)(-3.0,-7.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(6.0,3.0)(7.0,3.0)(-3.0,-7.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[9] (3.0,5.0)(9.0,3.0)(6.0,5.0), 3, 5, 9, 3, 6, 5" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(3.0,5.0)(9.0,3.0)(6.0,5.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(3.0,5.0)(9.0,3.0)(6.0,5.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[10] (8.0,2.0)(3.0,7.0)(3.0,3.0), 8, 2, 3, 7, 3, 3" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(8.0,2.0)(3.0,7.0)(3.0,3.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(8.0,2.0)(3.0,7.0)(3.0,3.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[11] (7.0,7.0)(4.0,0.0)(5.0,5.0), 7, 7, 4, 0, 5, 5" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(7.0,7.0)(4.0,0.0)(5.0,5.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(7.0,7.0)(4.0,0.0)(5.0,5.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testPoints" name="[12] (3.0,4.0)(8.0,2.0)(6.0,9.0), 3, 4, 8, 2, 6, 9" metainfo="java.lang.String, double, double, double, double, double, double" status="failed">
                <diff actual="null" expected="(3.0,4.0)(8.0,2.0)(6.0,9.0)"/>
                <output type="stderr">org.opentest4j.AssertionFailedError: Error in pointsToString() on case Triangle[(3.0,4.0)(8.0,2.0)(6.0,9.0)] ==&gt; &#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)&#13;
	at com.epam.rd.autotasks.figures.TriangleTest.testPoints(TriangleTest.java:40)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:198)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:106)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:106)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)&#13;
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)&#13;
</output>
            </test>
        </suite>
        <test locationUrl="java:test://com.epam.rd.autotasks.figures.TriangleTest/testConstructor" name="testConstructor()" metainfo="" status="passed"/>
    </suite>
    <suite duration="40" locationUrl="java:suite://com.epam.rd.autotasks.figures.CircleTest" name="CircleTest" status="passed">
        <suite duration="5" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testLeftmost" name="testLeftmost(double, double, Circle)" metainfo="double, double, com.epam.rd.autotasks.figures.Circle" status="passed">
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testLeftmost" name="[1] -1.0, 0.0, Circle[(0.0,0.0)1.0]" metainfo="double, double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testLeftmost" name="[2] 0.0, 3.0, Circle[(1.0,3.0)1.0]" metainfo="double, double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testLeftmost" name="[3] -79.5, 236.0, Circle[(-23.5,236.0)56.0]" metainfo="double, double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testLeftmost" name="[4] -28.501, -2.0, Circle[(-28.5,-2.0)0.001]" metainfo="double, double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testLeftmost" name="[5] 44.8765, -87.0, Circle[(56.0,-87.0)11.1235]" metainfo="double, double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
        </suite>
        <suite duration="4" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testArea" name="testArea(double, Circle)" metainfo="double, com.epam.rd.autotasks.figures.Circle" status="passed">
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testArea" name="[1] 3.141592653589793, Circle[(0.0,0.0)1.0]" metainfo="double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testArea" name="[2] 3.141592653589793, Circle[(1.0,3.0)1.0]" metainfo="double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testArea" name="[3] 9852.03456165759, Circle[(-23.5,236.0)56.0]" metainfo="double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testArea" name="[4] 3.1415926535897933E-6, Circle[(-28.5,-2.0)0.001]" metainfo="double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testArea" name="[5] 388.71633468071917, Circle[(56.0,-87.0)11.1235]" metainfo="double, com.epam.rd.autotasks.figures.Circle" status="passed"/>
        </suite>
        <suite duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testToString" name="testToString(String, Circle)" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed">
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testToString" name="[1] Circle[(0.0,0.0)1.0], Circle[(0.0,0.0)1.0]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testToString" name="[2] Circle[(1.0,3.0)1.0], Circle[(1.0,3.0)1.0]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testToString" name="[3] Circle[(-23.5,236.0)56.0], Circle[(-23.5,236.0)56.0]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testToString" name="[4] Circle[(-28.5,-2.0)0.001], Circle[(-28.5,-2.0)0.001]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="1" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testToString" name="[5] Circle[(56.0,-87.0)11.1235], Circle[(56.0,-87.0)11.1235]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
        </suite>
        <suite duration="26" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testPoints" name="testPoints(String, Circle)" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed">
            <test duration="23" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testPoints" name="[1] (0.0,0.0), Circle[(0.0,0.0)1.0]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testPoints" name="[2] (1.0,3.0), Circle[(1.0,3.0)1.0]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test duration="3" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testPoints" name="[3] (-23.5,236.0), Circle[(-23.5,236.0)56.0]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testPoints" name="[4] (-28.5,-2.0), Circle[(-28.5,-2.0)0.001]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
            <test locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testPoints" name="[5] (56.0,-87.0), Circle[(56.0,-87.0)11.1235]" metainfo="java.lang.String, com.epam.rd.autotasks.figures.Circle" status="passed"/>
        </suite>
        <test duration="2" locationUrl="java:test://com.epam.rd.autotasks.figures.CircleTest/testConstructor" name="testConstructor()" metainfo="" status="passed"/>
    </suite>
</testrun>
